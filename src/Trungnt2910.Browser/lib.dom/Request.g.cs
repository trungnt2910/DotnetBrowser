// This file was generated by "LibDomTypeScriptParser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", from "lib.dom.d.ts".
// Do not edit directly. If you encounter any bugs, please fix the generator's code.
//
// Copyright (C) 2022 Trung Nguyen. All rights reserved.
// Licensed under the MIT License.

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */

#nullable enable
using System;
using System.Diagnostics.CodeAnalysis;
using Trungnt2910.Browser.Generators;

namespace Trungnt2910.Browser.Dom;

#pragma warning disable CS0108, CS8764, CS8766
/// <summary>
/// This Fetch API interface represents a resource request.
/// </summary>
[JsObject]
public partial class Request: HasBody
{
    
    /// <summary>
    /// Returns the cache mode associated with request, which is a string indicating how the request will interact with the browser's cache when fetching.
    /// </summary>
    public string? Cache
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.cache");
    }
    
    
    /// <summary>
    /// Returns the credentials mode associated with request, which is a string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL.
    /// </summary>
    public string? Credentials
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.credentials");
    }
    
    
    /// <summary>
    /// Returns the kind of resource requested by request, e.g., "document" or "script".
    /// </summary>
    public string? Destination
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.destination");
    }
    
    
    /// <summary>
    /// Returns a Headers object consisting of the headers associated with request. Note that headers added in the network layer by the user agent will not be accounted for in this object, e.g., the "Host" header.
    /// </summary>
    public Headers? Headers
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime<Headers>.ValueOrNullFromJs($"{_jsThis}.headers");
    }
    
    
    /// <summary>
    /// Returns request's subresource integrity metadata, which is a cryptographic hash of the resource being fetched. Its value consists of multiple hashes separated by whitespace. [SRI]
    /// </summary>
    public string? Integrity
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.integrity");
    }
    
    
    /// <summary>
    /// Returns a boolean indicating whether or not request can outlive the global in which it was created.
    /// </summary>
    public bool? Keepalive
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.boolOrNullFromJs($"{_jsThis}.keepalive");
    }
    
    
    /// <summary>
    /// Returns request's HTTP method, which is "GET" by default.
    /// </summary>
    public string? Method
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.method");
    }
    
    
    /// <summary>
    /// Returns the mode associated with request, which is a string indicating whether the request will use CORS, or will be restricted to same-origin URLs.
    /// </summary>
    public string? Mode
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.mode");
    }
    
    
    /// <summary>
    /// Returns the redirect mode associated with request, which is a string indicating how redirects for the request will be handled during fetching. A request will follow redirects by default.
    /// </summary>
    public string? Redirect
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.redirect");
    }
    
    
    /// <summary>
    /// Returns the referrer of request. Its value can be a same-origin URL if explicitly set in init, the empty string to indicate no referrer, and "about:client" when defaulting to the global's default. This is used during fetching to determine the value of the `Referer` header of the request being made.
    /// </summary>
    public string? Referrer
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.referrer");
    }
    
    
    /// <summary>
    /// Returns the referrer policy associated with request. This is used during fetching to compute the value of the request's referrer.
    /// </summary>
    public string? ReferrerPolicy
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.referrerPolicy");
    }
    
    
    /// <summary>
    /// Returns the signal associated with request, which is an AbortSignal object indicating whether or not request has been aborted, and its abort event handler.
    /// </summary>
    public AbortSignal? Signal
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime<AbortSignal>.ValueOrNullFromJs($"{_jsThis}.signal");
    }
    
    
    /// <summary>
    /// Returns the URL of request as a string.
    /// </summary>
    public string? Url
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.url");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public Request? Clone() => global::Trungnt2910.Browser.WebAssemblyRuntime<Request>.ValueOrNullFromJs($"{_jsThis}.clone()");
    
}
#pragma warning restore CS0108, CS8764, CS8766

