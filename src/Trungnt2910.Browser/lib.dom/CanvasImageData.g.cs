// This file was generated by "LibDomTypeScriptParser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", from "lib.dom.d.ts".
// Do not edit directly. If you encounter any bugs, please fix the generator's code.
//
// Copyright (C) 2022 Trung Nguyen. All rights reserved.
// Licensed under the MIT License.

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */

#nullable enable
using System;
using System.Diagnostics.CodeAnalysis;
using Trungnt2910.Browser.Generators;

namespace Trungnt2910.Browser.Dom;

#pragma warning disable CS0108, CS8764, CS8766
/// <summary>
/// To be added.
/// </summary>
[JsObject]
public partial class CanvasImageData: JsObject, ICanvasImageData
{
    
    /// <summary>
    /// To be added.
    /// </summary>
    public ImageData? CreateImageData(double? sw, double? sh, ImageDataSettings? settings) => global::Trungnt2910.Browser.WebAssemblyRuntime<ImageData>.ValueOrNullFromJs($"{_jsThis}.createImageData({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(sw))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(sh))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(settings))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public ImageData? CreateImageData(ImageData? imagedata) => global::Trungnt2910.Browser.WebAssemblyRuntime<ImageData>.ValueOrNullFromJs($"{_jsThis}.createImageData({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(imagedata))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public ImageData? GetImageData(double? sx, double? sy, double? sw, double? sh, ImageDataSettings? settings) => global::Trungnt2910.Browser.WebAssemblyRuntime<ImageData>.ValueOrNullFromJs($"{_jsThis}.getImageData({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(sx))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(sy))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(sw))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(sh))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(settings))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void PutImageData(ImageData? imagedata, double? dx, double? dy) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.putImageData({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(imagedata))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(dx))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(dy))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void PutImageData(ImageData? imagedata, double? dx, double? dy, double? dirtyX, double? dirtyY, double? dirtyWidth, double? dirtyHeight) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.putImageData({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(imagedata))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(dx))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(dy))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(dirtyX))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(dirtyY))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(dirtyWidth))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(dirtyHeight))})");
    
}
#pragma warning restore CS0108, CS8764, CS8766

