// This file was generated by "LibDomTypeScriptParser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", from "lib.dom.d.ts".
// Do not edit directly. If you encounter any bugs, please fix the generator's code.
//
// Copyright (C) 2023 Trung Nguyen. All rights reserved.
// Licensed under the MIT License.

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */

#nullable enable
using System;
using System.Diagnostics.CodeAnalysis;
using Trungnt2910.Browser.Generators;

namespace Trungnt2910.Browser.Dom;

#pragma warning disable CS0108, CS8764, CS8766
/// <summary>
/// Enables retrieval and analysis of detailed network timing data regarding the loading of an application's resources. An application can use the timing metrics to determine, for example, the length of time it takes to fetch a specific resource, such as an XMLHttpRequest, &amp;lt;SVG&amp;gt;, image, or script.
/// </summary>
[JsObject]
public partial class PerformanceResourceTiming: PerformanceEntry
{
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? ConnectEnd
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.connectEnd");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? ConnectStart
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.connectStart");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? DecodedBodySize
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.decodedBodySize");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? DomainLookupEnd
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.domainLookupEnd");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? DomainLookupStart
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.domainLookupStart");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? EncodedBodySize
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.encodedBodySize");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? FetchStart
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.fetchStart");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public string? InitiatorType
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.initiatorType");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public string? NextHopProtocol
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.nextHopProtocol");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? RedirectEnd
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.redirectEnd");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? RedirectStart
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.redirectStart");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? RequestStart
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.requestStart");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? ResponseEnd
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.responseEnd");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? ResponseStart
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.responseStart");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? SecureConnectionStart
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.secureConnectionStart");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public ReadonlyArray<PerformanceServerTiming>? ServerTiming
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime<ReadonlyArray<PerformanceServerTiming>>.ValueOrNullFromJs($"{_jsThis}.serverTiming");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? TransferSize
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.transferSize");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? WorkerStart
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.workerStart");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public JsObject? ToJSON() => global::Trungnt2910.Browser.WebAssemblyRuntime<JsObject>.ValueOrNullFromJs($"{_jsThis}.toJSON()");
    
}
#pragma warning restore CS0108, CS8764, CS8766

