// This file was generated by "LibDomTypeScriptParser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", from "lib.dom.d.ts".
// Do not edit directly. If you encounter any bugs, please fix the generator's code.
//
// Copyright (C) 2022 Trung Nguyen. All rights reserved.
// Licensed under the MIT License.

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */

#nullable enable
using System;
using System.Diagnostics.CodeAnalysis;
using Trungnt2910.Browser.Generators;

namespace Trungnt2910.Browser.Dom;

#pragma warning disable CS0108, CS8764, CS8766
/// <summary>
/// To be added.
/// </summary>
[JsObject]
public partial class NodeListOf<TNode>: NodeList
{
    
    /// <summary>
    /// To be added.
    /// </summary>
    public TNode? Item(double? index) => global::Trungnt2910.Browser.WebAssemblyRuntime<TNode>.ValueOrNullFromJs($"{_jsThis}.item({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(index))})");
    
    
    /// <summary>
    /// Performs the specified action for each node in an list.
    /// </summary>
    /// <param name="callbackfn">A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the list.</param>
    /// <param name="thisArg">An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.</param>
    public void ForEach(JsAction<TNode?, double?, NodeListOf<TNode>?>? callbackfn, JsObject? thisArg) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.forEach({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(callbackfn))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(thisArg))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    [global::System.Runtime.CompilerServices.IndexerName("Indexer")]
    public TNode? this[double index]
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime<TNode>.ValueOrNullFromJs($"{_jsThis}[{(global::Trungnt2910.Browser.JsObject.ToJsObjectString(index))}]");
        set => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}[{(global::Trungnt2910.Browser.JsObject.ToJsObjectString(index))}] = {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(value))}");
    }
    
}
/// <summary>
/// To be added.
/// </summary>
[JsObject]
public partial class NodeListOf: NodeList
{
    
    /// <summary>
    /// To be added.
    /// </summary>
    public Node? Item(double? index) => global::Trungnt2910.Browser.WebAssemblyRuntime<Node>.ValueOrNullFromJs($"{_jsThis}.item({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(index))})");
    
    
    /// <summary>
    /// Performs the specified action for each node in an list.
    /// </summary>
    /// <param name="callbackfn">A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the list.</param>
    /// <param name="thisArg">An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.</param>
    public void ForEach(JsAction<INode?, double?, NodeListOf<INode>?>? callbackfn, JsObject? thisArg) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.forEach({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(callbackfn))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(thisArg))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    [global::System.Runtime.CompilerServices.IndexerName("Indexer")]
    public Node? this[double index]
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime<Node>.ValueOrNullFromJs($"{_jsThis}[{(global::Trungnt2910.Browser.JsObject.ToJsObjectString(index))}]");
        set => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}[{(global::Trungnt2910.Browser.JsObject.ToJsObjectString(index))}] = {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(value))}");
    }
    
}
#pragma warning restore CS0108, CS8764, CS8766

