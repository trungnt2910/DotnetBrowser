// This file was generated by "LibDomTypeScriptParser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", from "lib.dom.d.ts".
// Do not edit directly. If you encounter any bugs, please fix the generator's code.
//
// Copyright (C) 2023 Trung Nguyen. All rights reserved.
// Licensed under the MIT License.

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */

#nullable enable
using System;
using System.Diagnostics.CodeAnalysis;
using Trungnt2910.Browser.Generators;

namespace Trungnt2910.Browser.Dom;

#pragma warning disable CS0108, CS8764, CS8766
/// <summary>
/// To be added.
/// </summary>
[JsObject]
public partial class BaseAudioContext: EventTarget
{
    
    /// <summary>
    /// Available only in secure contexts.
    /// </summary>
    public AudioWorklet? AudioWorklet
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime<AudioWorklet>.ValueOrNullFromJs($"{_jsThis}.audioWorklet");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? CurrentTime
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.currentTime");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public AudioDestinationNode? Destination
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime<AudioDestinationNode>.ValueOrNullFromJs($"{_jsThis}.destination");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public AudioListener? Listener
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime<AudioListener>.ValueOrNullFromJs($"{_jsThis}.listener");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<BaseAudioContext?, Event?, JsObject?>? OnStateChange
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime<JsFunc<BaseAudioContext?, Event?, JsObject?>>.ValueOrNullFromJs($"{_jsThis}.onstatechange");
        set => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.onstatechange = {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(value))}");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? SampleRate
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.sampleRate");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public string? State
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.state");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public AnalyserNode? CreateAnalyser() => global::Trungnt2910.Browser.WebAssemblyRuntime<AnalyserNode>.ValueOrNullFromJs($"{_jsThis}.createAnalyser()");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public BiquadFilterNode? CreateBiquadFilter() => global::Trungnt2910.Browser.WebAssemblyRuntime<BiquadFilterNode>.ValueOrNullFromJs($"{_jsThis}.createBiquadFilter()");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public AudioBuffer? CreateBuffer(double? numberOfChannels, double? length, double? sampleRate) => global::Trungnt2910.Browser.WebAssemblyRuntime<AudioBuffer>.ValueOrNullFromJs($"{_jsThis}.createBuffer({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(numberOfChannels))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(length))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(sampleRate))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public AudioBufferSourceNode? CreateBufferSource() => global::Trungnt2910.Browser.WebAssemblyRuntime<AudioBufferSourceNode>.ValueOrNullFromJs($"{_jsThis}.createBufferSource()");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public ChannelMergerNode? CreateChannelMerger(double? numberOfInputs) => global::Trungnt2910.Browser.WebAssemblyRuntime<ChannelMergerNode>.ValueOrNullFromJs($"{_jsThis}.createChannelMerger({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(numberOfInputs))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public ChannelSplitterNode? CreateChannelSplitter(double? numberOfOutputs) => global::Trungnt2910.Browser.WebAssemblyRuntime<ChannelSplitterNode>.ValueOrNullFromJs($"{_jsThis}.createChannelSplitter({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(numberOfOutputs))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public ConstantSourceNode? CreateConstantSource() => global::Trungnt2910.Browser.WebAssemblyRuntime<ConstantSourceNode>.ValueOrNullFromJs($"{_jsThis}.createConstantSource()");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public ConvolverNode? CreateConvolver() => global::Trungnt2910.Browser.WebAssemblyRuntime<ConvolverNode>.ValueOrNullFromJs($"{_jsThis}.createConvolver()");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public DelayNode? CreateDelay(double? maxDelayTime) => global::Trungnt2910.Browser.WebAssemblyRuntime<DelayNode>.ValueOrNullFromJs($"{_jsThis}.createDelay({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(maxDelayTime))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public DynamicsCompressorNode? CreateDynamicsCompressor() => global::Trungnt2910.Browser.WebAssemblyRuntime<DynamicsCompressorNode>.ValueOrNullFromJs($"{_jsThis}.createDynamicsCompressor()");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public GainNode? CreateGain() => global::Trungnt2910.Browser.WebAssemblyRuntime<GainNode>.ValueOrNullFromJs($"{_jsThis}.createGain()");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public IIRFilterNode? CreateIIRFilter(JsArray<double>? feedforward, JsArray<double>? feedback) => global::Trungnt2910.Browser.WebAssemblyRuntime<IIRFilterNode>.ValueOrNullFromJs($"{_jsThis}.createIIRFilter({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(feedforward))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(feedback))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public OscillatorNode? CreateOscillator() => global::Trungnt2910.Browser.WebAssemblyRuntime<OscillatorNode>.ValueOrNullFromJs($"{_jsThis}.createOscillator()");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public PannerNode? CreatePanner() => global::Trungnt2910.Browser.WebAssemblyRuntime<PannerNode>.ValueOrNullFromJs($"{_jsThis}.createPanner()");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public PeriodicWave? CreatePeriodicWave(Union<JsArray<double>, Float32Array>? real, Union<JsArray<double>, Float32Array>? imag, PeriodicWaveConstraints? constraints) => global::Trungnt2910.Browser.WebAssemblyRuntime<PeriodicWave>.ValueOrNullFromJs($"{_jsThis}.createPeriodicWave({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(real))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(imag))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(constraints))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    [global::System.Obsolete]
    public ScriptProcessorNode? CreateScriptProcessor(double? bufferSize, double? numberOfInputChannels, double? numberOfOutputChannels) => global::Trungnt2910.Browser.WebAssemblyRuntime<ScriptProcessorNode>.ValueOrNullFromJs($"{_jsThis}.createScriptProcessor({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(bufferSize))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(numberOfInputChannels))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(numberOfOutputChannels))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public StereoPannerNode? CreateStereoPanner() => global::Trungnt2910.Browser.WebAssemblyRuntime<StereoPannerNode>.ValueOrNullFromJs($"{_jsThis}.createStereoPanner()");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public WaveShaperNode? CreateWaveShaper() => global::Trungnt2910.Browser.WebAssemblyRuntime<WaveShaperNode>.ValueOrNullFromJs($"{_jsThis}.createWaveShaper()");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public Promise<AudioBuffer>? DecodeAudioData(ArrayBuffer? audioData, DecodeSuccessCallback? successCallback, DecodeErrorCallback? errorCallback) => global::Trungnt2910.Browser.WebAssemblyRuntime<Promise<AudioBuffer>>.ValueOrNullFromJs($"{_jsThis}.decodeAudioData({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(audioData))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(successCallback))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(errorCallback))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void AddEventListener(string? type, Union<EventListener, EventListenerObject>? listener, Union<bool, AddEventListenerOptions>? options) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.addEventListener({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(type))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(listener))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(options))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void RemoveEventListener(string? type, Union<EventListener, EventListenerObject>? listener, Union<bool, EventListenerOptions>? options) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.removeEventListener({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(type))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(listener))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(options))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<Event?> StateChange
    {
        add => AddEventListener("statechange", value);
        remove => RemoveEventListener("statechange", value);
    }
    
}
#pragma warning restore CS0108, CS8764, CS8766

