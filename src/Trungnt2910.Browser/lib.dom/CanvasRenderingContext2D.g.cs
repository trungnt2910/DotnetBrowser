// This file was generated by "LibDomTypeScriptParser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", from "lib.dom.d.ts".
// Do not edit directly. If you encounter any bugs, please fix the generator's code.
//
// Copyright (C) 2022 Trung Nguyen. All rights reserved.
// Licensed under the MIT License.

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */

#nullable enable
using System;
using System.Diagnostics.CodeAnalysis;
using Trungnt2910.Browser.Generators;

namespace Trungnt2910.Browser.Dom;

#pragma warning disable CS0108, CS8764, CS8766
/// <summary>
/// The CanvasRenderingContext2D interface, part of the Canvas API, provides the 2D rendering context for the drawing surface of a &amp;lt;canvas&amp;gt; element. It is used for drawing shapes, text, images, and other objects.
/// </summary>
[JsObject]
public partial class CanvasRenderingContext2D: CanvasCompositing, ICanvasDrawImage, ICanvasDrawPath, ICanvasFillStrokeStyles, ICanvasFilters, ICanvasImageData, ICanvasImageSmoothing, ICanvasPath, ICanvasPathDrawingStyles, ICanvasRect, ICanvasShadowStyles, ICanvasState, ICanvasText, ICanvasTextDrawingStyles, ICanvasTransform, ICanvasUserInterface
{
    
    /// <summary>
    /// To be added.
    /// </summary>
    public HTMLCanvasElement? Canvas
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime<HTMLCanvasElement>.ValueOrNullFromJs($"{_jsThis}.canvas");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public Union<string, CanvasGradient, CanvasPattern>? FillStyle
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime<Union<string, CanvasGradient, CanvasPattern>>.ValueOrNullFromJs($"{_jsThis}.fillStyle");
        set => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.fillStyle = {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(value))}");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public Union<string, CanvasGradient, CanvasPattern>? StrokeStyle
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime<Union<string, CanvasGradient, CanvasPattern>>.ValueOrNullFromJs($"{_jsThis}.strokeStyle");
        set => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.strokeStyle = {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(value))}");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public string? Filter
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.filter");
        set => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.filter = {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(value))}");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public bool? ImageSmoothingEnabled
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.boolOrNullFromJs($"{_jsThis}.imageSmoothingEnabled");
        set => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.imageSmoothingEnabled = {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(value))}");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public string? ImageSmoothingQuality
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.imageSmoothingQuality");
        set => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.imageSmoothingQuality = {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(value))}");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public string? LineCap
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.lineCap");
        set => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.lineCap = {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(value))}");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? LineDashOffset
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.lineDashOffset");
        set => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.lineDashOffset = {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(value))}");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public string? LineJoin
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.lineJoin");
        set => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.lineJoin = {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(value))}");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? LineWidth
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.lineWidth");
        set => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.lineWidth = {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(value))}");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? MiterLimit
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.miterLimit");
        set => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.miterLimit = {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(value))}");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? ShadowBlur
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.shadowBlur");
        set => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.shadowBlur = {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(value))}");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public string? ShadowColor
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.shadowColor");
        set => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.shadowColor = {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(value))}");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? ShadowOffsetX
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.shadowOffsetX");
        set => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.shadowOffsetX = {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(value))}");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? ShadowOffsetY
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.shadowOffsetY");
        set => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.shadowOffsetY = {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(value))}");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public string? Direction
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.direction");
        set => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.direction = {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(value))}");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public string? Font
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.font");
        set => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.font = {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(value))}");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public string? TextAlign
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.textAlign");
        set => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.textAlign = {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(value))}");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public string? TextBaseline
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.textBaseline");
        set => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.textBaseline = {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(value))}");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public CanvasRenderingContext2DSettings? GetContextAttributes() => global::Trungnt2910.Browser.WebAssemblyRuntime<CanvasRenderingContext2DSettings>.ValueOrNullFromJs($"{_jsThis}.getContextAttributes()");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void DrawImage(Union<HTMLImageElement, SVGImageElement, HTMLVideoElement, HTMLCanvasElement, ImageBitmap>? image, double? dx, double? dy) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.drawImage({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(image))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(dx))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(dy))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void DrawImage(Union<HTMLImageElement, SVGImageElement, HTMLVideoElement, HTMLCanvasElement, ImageBitmap>? image, double? dx, double? dy, double? dw, double? dh) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.drawImage({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(image))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(dx))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(dy))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(dw))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(dh))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void DrawImage(Union<HTMLImageElement, SVGImageElement, HTMLVideoElement, HTMLCanvasElement, ImageBitmap>? image, double? sx, double? sy, double? sw, double? sh, double? dx, double? dy, double? dw, double? dh) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.drawImage({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(image))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(sx))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(sy))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(sw))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(sh))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(dx))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(dy))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(dw))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(dh))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void BeginPath() => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.beginPath()");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void Clip(string? fillRule) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.clip({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(fillRule))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void Clip(Path2D? path, string? fillRule) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.clip({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(path))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(fillRule))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void Fill(string? fillRule) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.fill({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(fillRule))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void Fill(Path2D? path, string? fillRule) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.fill({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(path))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(fillRule))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public bool? IsPointInPath(double? x, double? y, string? fillRule) => global::Trungnt2910.Browser.WebAssemblyRuntime.boolOrNullFromJs($"{_jsThis}.isPointInPath({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(x))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(y))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(fillRule))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public bool? IsPointInPath(Path2D? path, double? x, double? y, string? fillRule) => global::Trungnt2910.Browser.WebAssemblyRuntime.boolOrNullFromJs($"{_jsThis}.isPointInPath({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(path))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(x))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(y))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(fillRule))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public bool? IsPointInStroke(double? x, double? y) => global::Trungnt2910.Browser.WebAssemblyRuntime.boolOrNullFromJs($"{_jsThis}.isPointInStroke({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(x))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(y))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public bool? IsPointInStroke(Path2D? path, double? x, double? y) => global::Trungnt2910.Browser.WebAssemblyRuntime.boolOrNullFromJs($"{_jsThis}.isPointInStroke({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(path))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(x))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(y))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void Stroke() => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.stroke()");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void Stroke(Path2D? path) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.stroke({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(path))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public CanvasGradient? CreateConicGradient(double? startAngle, double? x, double? y) => global::Trungnt2910.Browser.WebAssemblyRuntime<CanvasGradient>.ValueOrNullFromJs($"{_jsThis}.createConicGradient({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(startAngle))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(x))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(y))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public CanvasGradient? CreateLinearGradient(double? x0, double? y0, double? x1, double? y1) => global::Trungnt2910.Browser.WebAssemblyRuntime<CanvasGradient>.ValueOrNullFromJs($"{_jsThis}.createLinearGradient({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(x0))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(y0))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(x1))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(y1))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public CanvasPattern? CreatePattern(Union<HTMLImageElement, SVGImageElement, HTMLVideoElement, HTMLCanvasElement, ImageBitmap>? image, string? repetition) => global::Trungnt2910.Browser.WebAssemblyRuntime<CanvasPattern>.ValueOrNullFromJs($"{_jsThis}.createPattern({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(image))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(repetition))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public CanvasGradient? CreateRadialGradient(double? x0, double? y0, double? r0, double? x1, double? y1, double? r1) => global::Trungnt2910.Browser.WebAssemblyRuntime<CanvasGradient>.ValueOrNullFromJs($"{_jsThis}.createRadialGradient({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(x0))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(y0))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(r0))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(x1))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(y1))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(r1))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public ImageData? CreateImageData(double? sw, double? sh, ImageDataSettings? settings) => global::Trungnt2910.Browser.WebAssemblyRuntime<ImageData>.ValueOrNullFromJs($"{_jsThis}.createImageData({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(sw))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(sh))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(settings))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public ImageData? CreateImageData(ImageData? imagedata) => global::Trungnt2910.Browser.WebAssemblyRuntime<ImageData>.ValueOrNullFromJs($"{_jsThis}.createImageData({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(imagedata))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public ImageData? GetImageData(double? sx, double? sy, double? sw, double? sh, ImageDataSettings? settings) => global::Trungnt2910.Browser.WebAssemblyRuntime<ImageData>.ValueOrNullFromJs($"{_jsThis}.getImageData({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(sx))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(sy))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(sw))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(sh))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(settings))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void PutImageData(ImageData? imagedata, double? dx, double? dy) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.putImageData({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(imagedata))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(dx))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(dy))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void PutImageData(ImageData? imagedata, double? dx, double? dy, double? dirtyX, double? dirtyY, double? dirtyWidth, double? dirtyHeight) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.putImageData({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(imagedata))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(dx))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(dy))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(dirtyX))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(dirtyY))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(dirtyWidth))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(dirtyHeight))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void Arc(double? x, double? y, double? radius, double? startAngle, double? endAngle, bool? counterclockwise) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.arc({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(x))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(y))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(radius))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(startAngle))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(endAngle))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(counterclockwise))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void ArcTo(double? x1, double? y1, double? x2, double? y2, double? radius) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.arcTo({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(x1))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(y1))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(x2))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(y2))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(radius))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void BezierCurveTo(double? cp1x, double? cp1y, double? cp2x, double? cp2y, double? x, double? y) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.bezierCurveTo({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(cp1x))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(cp1y))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(cp2x))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(cp2y))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(x))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(y))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void ClosePath() => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.closePath()");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void Ellipse(double? x, double? y, double? radiusX, double? radiusY, double? rotation, double? startAngle, double? endAngle, bool? counterclockwise) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.ellipse({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(x))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(y))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(radiusX))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(radiusY))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(rotation))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(startAngle))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(endAngle))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(counterclockwise))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void LineTo(double? x, double? y) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.lineTo({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(x))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(y))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void MoveTo(double? x, double? y) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.moveTo({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(x))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(y))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void QuadraticCurveTo(double? cpx, double? cpy, double? x, double? y) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.quadraticCurveTo({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(cpx))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(cpy))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(x))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(y))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void Rect(double? x, double? y, double? w, double? h) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.rect({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(x))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(y))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(w))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(h))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public JsArray<double>? GetLineDash() => global::Trungnt2910.Browser.WebAssemblyRuntime<JsArray<double>>.ValueOrNullFromJs($"{_jsThis}.getLineDash()");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void SetLineDash(JsArray<double>? segments) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.setLineDash({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(segments))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void ClearRect(double? x, double? y, double? w, double? h) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.clearRect({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(x))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(y))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(w))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(h))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void FillRect(double? x, double? y, double? w, double? h) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.fillRect({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(x))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(y))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(w))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(h))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void StrokeRect(double? x, double? y, double? w, double? h) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.strokeRect({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(x))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(y))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(w))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(h))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void Restore() => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.restore()");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void Save() => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.save()");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void FillText(string? text, double? x, double? y, double? maxWidth) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.fillText({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(text))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(x))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(y))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(maxWidth))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public TextMetrics? MeasureText(string? text) => global::Trungnt2910.Browser.WebAssemblyRuntime<TextMetrics>.ValueOrNullFromJs($"{_jsThis}.measureText({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(text))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void StrokeText(string? text, double? x, double? y, double? maxWidth) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.strokeText({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(text))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(x))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(y))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(maxWidth))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public DOMMatrix? GetTransform() => global::Trungnt2910.Browser.WebAssemblyRuntime<DOMMatrix>.ValueOrNullFromJs($"{_jsThis}.getTransform()");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void ResetTransform() => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.resetTransform()");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void Rotate(double? angle) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.rotate({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(angle))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void Scale(double? x, double? y) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.scale({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(x))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(y))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void SetTransform(double? a, double? b, double? c, double? d, double? e, double? f) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.setTransform({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(a))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(b))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(c))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(d))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(e))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(f))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void SetTransform(DOMMatrix2DInit? transform) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.setTransform({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(transform))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void Transform(double? a, double? b, double? c, double? d, double? e, double? f) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.transform({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(a))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(b))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(c))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(d))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(e))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(f))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void Translate(double? x, double? y) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.translate({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(x))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(y))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void DrawFocusIfNeeded(IElement? element) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.drawFocusIfNeeded({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(element))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public void DrawFocusIfNeeded(Path2D? path, IElement? element) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.drawFocusIfNeeded({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(path))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(element))})");
    
}
#pragma warning restore CS0108, CS8764, CS8766

