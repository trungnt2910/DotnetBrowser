// This file was generated by "LibDomTypeScriptParser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", from "lib.dom.d.ts".
// Do not edit directly. If you encounter any bugs, please fix the generator's code.
//
// Copyright (C) 2023 Trung Nguyen. All rights reserved.
// Licensed under the MIT License.

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */

#nullable enable
using System;
using System.Diagnostics.CodeAnalysis;
using Trungnt2910.Browser.Generators;

namespace Trungnt2910.Browser.Dom;

#pragma warning disable CS0108, CS8764, CS8766
/// <summary>
/// A MutationRecord represents an individual DOM mutation. It is the object that is passed to MutationObserver's callback.
/// </summary>
[JsObject]
public partial class MutationRecord: JsObject
{
    
    /// <summary>
    /// Return the nodes added and removed respectively.
    /// </summary>
    public NodeList? AddedNodes
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime<NodeList>.ValueOrNullFromJs($"{_jsThis}.addedNodes");
    }
    
    
    /// <summary>
    /// Returns the local name of the changed attribute, and null otherwise.
    /// </summary>
    public string? AttributeName
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.attributeName");
    }
    
    
    /// <summary>
    /// Returns the namespace of the changed attribute, and null otherwise.
    /// </summary>
    public string? AttributeNamespace
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.attributeNamespace");
    }
    
    
    /// <summary>
    /// Return the previous and next sibling respectively of the added or removed nodes, and null otherwise.
    /// </summary>
    public Node? NextSibling
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime<Node>.ValueOrNullFromJs($"{_jsThis}.nextSibling");
    }
    
    
    /// <summary>
    /// The return value depends on type. For "attributes", it is the value of the changed attribute before the change. For "characterData", it is the data of the changed node before the change. For "childList", it is null.
    /// </summary>
    public string? OldValue
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.oldValue");
    }
    
    
    /// <summary>
    /// Return the previous and next sibling respectively of the added or removed nodes, and null otherwise.
    /// </summary>
    public Node? PreviousSibling
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime<Node>.ValueOrNullFromJs($"{_jsThis}.previousSibling");
    }
    
    
    /// <summary>
    /// Return the nodes added and removed respectively.
    /// </summary>
    public NodeList? RemovedNodes
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime<NodeList>.ValueOrNullFromJs($"{_jsThis}.removedNodes");
    }
    
    
    /// <summary>
    /// Returns the node the mutation affected, depending on the type. For "attributes", it is the element whose attribute changed. For "characterData", it is the CharacterData node. For "childList", it is the node whose children changed.
    /// </summary>
    public Node? Target
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime<Node>.ValueOrNullFromJs($"{_jsThis}.target");
    }
    
    
    /// <summary>
    /// Returns "attributes" if it was an attribute mutation. "characterData" if it was a mutation to a CharacterData node. And "childList" if it was a mutation to the tree of nodes.
    /// </summary>
    public string? Type
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.type");
    }
    
}
#pragma warning restore CS0108, CS8764, CS8766

