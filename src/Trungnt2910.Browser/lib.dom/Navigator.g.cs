// This file was generated by "LibDomTypeScriptParser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", from "lib.dom.d.ts".
// Do not edit directly. If you encounter any bugs, please fix the generator's code.
//
// Copyright (C) 2023 Trung Nguyen. All rights reserved.
// Licensed under the MIT License.

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */

#nullable enable
using System;
using System.Diagnostics.CodeAnalysis;
using Trungnt2910.Browser.Generators;

namespace Trungnt2910.Browser.Dom;

#pragma warning disable CS0108, CS8764, CS8766
/// <summary>
/// The state and the identity of the user agent. It allows scripts to query it and to register themselves to carry on some activities.
/// </summary>
[JsObject]
public partial class Navigator: NavigatorAutomationInformation, INavigatorConcurrentHardware, INavigatorContentUtils, INavigatorCookies, INavigatorID, INavigatorLanguage, INavigatorLocks, INavigatorOnLine, INavigatorPlugins, INavigatorStorage
{
    
    /// <summary>
    /// Available only in secure contexts.
    /// </summary>
    public Clipboard? Clipboard
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime<Clipboard>.ValueOrNullFromJs($"{_jsThis}.clipboard");
    }
    
    
    /// <summary>
    /// Available only in secure contexts.
    /// </summary>
    public CredentialsContainer? Credentials
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime<CredentialsContainer>.ValueOrNullFromJs($"{_jsThis}.credentials");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public string? DoNotTrack
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.doNotTrack");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public Geolocation? Geolocation
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime<Geolocation>.ValueOrNullFromJs($"{_jsThis}.geolocation");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? MaxTouchPoints
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.maxTouchPoints");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public MediaCapabilities? MediaCapabilities
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime<MediaCapabilities>.ValueOrNullFromJs($"{_jsThis}.mediaCapabilities");
    }
    
    
    /// <summary>
    /// Available only in secure contexts.
    /// </summary>
    public MediaDevices? MediaDevices
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime<MediaDevices>.ValueOrNullFromJs($"{_jsThis}.mediaDevices");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public MediaSession? MediaSession
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime<MediaSession>.ValueOrNullFromJs($"{_jsThis}.mediaSession");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public Permissions? Permissions
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime<Permissions>.ValueOrNullFromJs($"{_jsThis}.permissions");
    }
    
    
    /// <summary>
    /// Available only in secure contexts.
    /// </summary>
    public ServiceWorkerContainer? ServiceWorker
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime<ServiceWorkerContainer>.ValueOrNullFromJs($"{_jsThis}.serviceWorker");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? HardwareConcurrency
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.hardwareConcurrency");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public bool? CookieEnabled
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.boolOrNullFromJs($"{_jsThis}.cookieEnabled");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    [global::System.Obsolete]
    public string? AppCodeName
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.appCodeName");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    [global::System.Obsolete]
    public string? AppName
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.appName");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    [global::System.Obsolete]
    public string? AppVersion
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.appVersion");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public string? Platform
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.platform");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    [global::System.Obsolete]
    public string? Product
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.product");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    [global::System.Obsolete]
    public string? ProductSub
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.productSub");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public string? UserAgent
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.userAgent");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public string? Vendor
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.vendor");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    [global::System.Obsolete]
    public string? VendorSub
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.vendorSub");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public string? Language
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.language");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public ReadonlyArray<string>? Languages
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime<ReadonlyArray<string>>.ValueOrNullFromJs($"{_jsThis}.languages");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public LockManager? Locks
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime<LockManager>.ValueOrNullFromJs($"{_jsThis}.locks");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public bool? OnLine
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.boolOrNullFromJs($"{_jsThis}.onLine");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    [global::System.Obsolete]
    public MimeTypeArray? MimeTypes
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime<MimeTypeArray>.ValueOrNullFromJs($"{_jsThis}.mimeTypes");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public bool? PdfViewerEnabled
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.boolOrNullFromJs($"{_jsThis}.pdfViewerEnabled");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    [global::System.Obsolete]
    public PluginArray? Plugins
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime<PluginArray>.ValueOrNullFromJs($"{_jsThis}.plugins");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public StorageManager? Storage
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime<StorageManager>.ValueOrNullFromJs($"{_jsThis}.storage");
    }
    
    
    /// <summary>
    /// Available only in secure contexts.
    /// </summary>
    public bool? CanShare(ShareData? data) => global::Trungnt2910.Browser.WebAssemblyRuntime.boolOrNullFromJs($"{_jsThis}.canShare({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(data))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public JsArray<Gamepad>? GetGamepads() => global::Trungnt2910.Browser.WebAssemblyRuntime<JsArray<Gamepad>>.ValueOrNullFromJs($"{_jsThis}.getGamepads()");
    
    
    /// <summary>
    /// Available only in secure contexts.
    /// </summary>
    public Promise<MediaKeySystemAccess>? RequestMediaKeySystemAccess(string? keySystem, JsArray<MediaKeySystemConfiguration>? supportedConfigurations) => global::Trungnt2910.Browser.WebAssemblyRuntime<Promise<MediaKeySystemAccess>>.ValueOrNullFromJs($"{_jsThis}.requestMediaKeySystemAccess({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(keySystem))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(supportedConfigurations))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public bool? SendBeacon(Union<string, URL>? url, Union<ReadableStream, Blob, ArrayBufferView, ArrayBuffer, FormData, URLSearchParams, string>? data) => global::Trungnt2910.Browser.WebAssemblyRuntime.boolOrNullFromJs($"{_jsThis}.sendBeacon({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(url))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(data))})");
    
    
    /// <summary>
    /// Available only in secure contexts.
    /// </summary>
    public Promise? Share(ShareData? data) => global::Trungnt2910.Browser.WebAssemblyRuntime<Promise>.ValueOrNullFromJs($"{_jsThis}.share({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(data))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public bool? Vibrate(Union<double, JsArray<double>>? pattern) => global::Trungnt2910.Browser.WebAssemblyRuntime.boolOrNullFromJs($"{_jsThis}.vibrate({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(pattern))})");
    
    
    /// <summary>
    /// Available only in secure contexts.
    /// </summary>
    public void RegisterProtocolHandler(string? scheme, Union<string, URL>? url) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.registerProtocolHandler({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(scheme))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(url))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    [global::System.Obsolete]
    public bool? JavaEnabled() => global::Trungnt2910.Browser.WebAssemblyRuntime.boolOrNullFromJs($"{_jsThis}.javaEnabled()");
    
}
#pragma warning restore CS0108, CS8764, CS8766

