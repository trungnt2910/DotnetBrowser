// This file was generated by "LibDomTypeScriptParser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", from "lib.dom.d.ts".
// Do not edit directly. If you encounter any bugs, please fix the generator's code.
//
// Copyright (C) 2022 Trung Nguyen. All rights reserved.
// Licensed under the MIT License.

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */

#nullable enable
using System;
using System.Diagnostics.CodeAnalysis;
using Trungnt2910.Browser.Generators;

namespace Trungnt2910.Browser.Dom;

#pragma warning disable CS0108, CS8764, CS8766
/// <summary>
/// Provides event properties that are specific to modifications to the Document Object Model (DOM) hierarchy and nodes.
/// </summary>
[global::System.Obsolete("DOM4 [DOM] provides a new mechanism using a MutationObserver interface which addresses the use cases that mutation events solve, but in a more performant manner. Thus, this specification describes mutation events for reference and completeness of legacy behavior, but deprecates the use of the MutationEvent interface.")]
[JsObject]
public partial class MutationEvent: Event
{
    
    /// <summary>
    /// To be added.
    /// </summary>
    [global::System.Obsolete]
    public double? AttrChange
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.attrChange");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    [global::System.Obsolete]
    public string? AttrName
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.attrName");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    [global::System.Obsolete]
    public string? NewValue
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.newValue");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    [global::System.Obsolete]
    public string? PrevValue
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.StringOrNullFromJs($"{_jsThis}.prevValue");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    [global::System.Obsolete]
    public Node? RelatedNode
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime<Node>.ValueOrNullFromJs($"{_jsThis}.relatedNode");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? ADDITION
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.ADDITION");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? MODIFICATION
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.MODIFICATION");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? REMOVAL
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.REMOVAL");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    [global::System.Obsolete]
    public void InitMutationEvent(string? typeArg, bool? bubblesArg, bool? cancelableArg, INode? relatedNodeArg, string? prevValueArg, string? newValueArg, string? attrNameArg, double? attrChangeArg) => global::Trungnt2910.Browser.WebAssemblyRuntime.InvokeJS($"{_jsThis}.initMutationEvent({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(typeArg))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(bubblesArg))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(cancelableArg))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(relatedNodeArg))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(prevValueArg))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(newValueArg))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(attrNameArg))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(attrChangeArg))})");
    
}
#pragma warning restore CS0108, CS8764, CS8766

