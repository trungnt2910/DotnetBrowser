// This file was generated by "LibDomTypeScriptParser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", from "lib.dom.d.ts".
// Do not edit directly. If you encounter any bugs, please fix the generator's code.
//
// Copyright (C) 2023 Trung Nguyen. All rights reserved.
// Licensed under the MIT License.

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */

#nullable enable
using System;
using System.Diagnostics.CodeAnalysis;
using Trungnt2910.Browser.Generators;

namespace Trungnt2910.Browser.Dom;

#pragma warning disable CS0108, CS8764, CS8766
/// <summary>
/// To be added.
/// </summary>
public interface IGlobalEventHandlers
{
    /// <summary>
    /// Fires when the user aborts the download.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, UIEvent?, JsObject?>? OnAbort { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, AnimationEvent?, JsObject?>? OnAnimationCancel { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, AnimationEvent?, JsObject?>? OnAnimationEnd { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, AnimationEvent?, JsObject?>? OnAnimationIteration { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, AnimationEvent?, JsObject?>? OnAnimationStart { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, MouseEvent?, JsObject?>? OnAuxClick { get; set; }
    /// <summary>
    /// Fires when the object loses the input focus.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, FocusEvent?, JsObject?>? OnBlur { get; set; }
    /// <summary>
    /// Occurs when playback is possible, but would require further buffering.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, Event?, JsObject?>? OnCanPlay { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, Event?, JsObject?>? OnCanPlayThrough { get; set; }
    /// <summary>
    /// Fires when the contents of the object or selection have changed.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, Event?, JsObject?>? OnChange { get; set; }
    /// <summary>
    /// Fires when the user clicks the left mouse button on the object
    /// </summary>
    public JsFunc<GlobalEventHandlers?, MouseEvent?, JsObject?>? OnClick { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, Event?, JsObject?>? OnClose { get; set; }
    /// <summary>
    /// Fires when the user clicks the right mouse button in the client area, opening the context menu.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, MouseEvent?, JsObject?>? OnContextMenu { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, Event?, JsObject?>? OnCueChange { get; set; }
    /// <summary>
    /// Fires when the user double-clicks the object.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, MouseEvent?, JsObject?>? OnDblClick { get; set; }
    /// <summary>
    /// Fires on the source object continuously during a drag operation.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, DragEvent?, JsObject?>? OnDrag { get; set; }
    /// <summary>
    /// Fires on the source object when the user releases the mouse at the close of a drag operation.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, DragEvent?, JsObject?>? OnDragEnd { get; set; }
    /// <summary>
    /// Fires on the target element when the user drags the object to a valid drop target.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, DragEvent?, JsObject?>? OnDragEnter { get; set; }
    /// <summary>
    /// Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, DragEvent?, JsObject?>? OnDragLeave { get; set; }
    /// <summary>
    /// Fires on the target element continuously while the user drags the object over a valid drop target.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, DragEvent?, JsObject?>? OnDragOver { get; set; }
    /// <summary>
    /// Fires on the source object when the user starts to drag a text selection or selected object.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, DragEvent?, JsObject?>? OnDragStart { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, DragEvent?, JsObject?>? OnDrop { get; set; }
    /// <summary>
    /// Occurs when the duration attribute is updated.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, Event?, JsObject?>? OnDurationChange { get; set; }
    /// <summary>
    /// Occurs when the media element is reset to its initial state.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, Event?, JsObject?>? OnEmptied { get; set; }
    /// <summary>
    /// Occurs when the end of playback is reached.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, Event?, JsObject?>? OnEnded { get; set; }
    /// <summary>
    /// Fires when an error occurs during object loading.
    /// </summary>
    public OnErrorEventHandlerNonNull? OnError { get; set; }
    /// <summary>
    /// Fires when the object receives focus.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, FocusEvent?, JsObject?>? OnFocus { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, FormDataEvent?, JsObject?>? OnFormData { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, PointerEvent?, JsObject?>? OnGotPointerCapture { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, Event?, JsObject?>? OnInput { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, Event?, JsObject?>? OnInvalid { get; set; }
    /// <summary>
    /// Fires when the user presses a key.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, KeyboardEvent?, JsObject?>? OnKeyDown { get; set; }
    /// <summary>
    /// Fires when the user presses an alphanumeric key.
    /// </summary>
    [global::System.Obsolete]
    public JsFunc<GlobalEventHandlers?, KeyboardEvent?, JsObject?>? OnKeyPress { get; set; }
    /// <summary>
    /// Fires when the user releases a key.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, KeyboardEvent?, JsObject?>? OnKeyUp { get; set; }
    /// <summary>
    /// Fires immediately after the browser loads the object.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, Event?, JsObject?>? OnLoad { get; set; }
    /// <summary>
    /// Occurs when media data is loaded at the current playback position.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, Event?, JsObject?>? OnLoadedData { get; set; }
    /// <summary>
    /// Occurs when the duration and dimensions of the media have been determined.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, Event?, JsObject?>? OnLoadedMetadata { get; set; }
    /// <summary>
    /// Occurs when Internet Explorer begins looking for media data.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, Event?, JsObject?>? OnLoadStart { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, PointerEvent?, JsObject?>? OnLostPointerCapture { get; set; }
    /// <summary>
    /// Fires when the user clicks the object with either mouse button.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, MouseEvent?, JsObject?>? OnMouseDown { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, MouseEvent?, JsObject?>? OnMouseEnter { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, MouseEvent?, JsObject?>? OnMouseLeave { get; set; }
    /// <summary>
    /// Fires when the user moves the mouse over the object.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, MouseEvent?, JsObject?>? OnMouseMove { get; set; }
    /// <summary>
    /// Fires when the user moves the mouse pointer outside the boundaries of the object.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, MouseEvent?, JsObject?>? OnMouseOut { get; set; }
    /// <summary>
    /// Fires when the user moves the mouse pointer into the object.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, MouseEvent?, JsObject?>? OnMouseOver { get; set; }
    /// <summary>
    /// Fires when the user releases a mouse button while the mouse is over the object.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, MouseEvent?, JsObject?>? OnMouseUp { get; set; }
    /// <summary>
    /// Occurs when playback is paused.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, Event?, JsObject?>? OnPause { get; set; }
    /// <summary>
    /// Occurs when the play method is requested.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, Event?, JsObject?>? OnPlay { get; set; }
    /// <summary>
    /// Occurs when the audio or video has started playing.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, Event?, JsObject?>? OnPlaying { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, PointerEvent?, JsObject?>? OnPointerCancel { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, PointerEvent?, JsObject?>? OnPointerDown { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, PointerEvent?, JsObject?>? OnPointerEnter { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, PointerEvent?, JsObject?>? OnPointerLeave { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, PointerEvent?, JsObject?>? OnPointerMove { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, PointerEvent?, JsObject?>? OnPointerOut { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, PointerEvent?, JsObject?>? OnPointerOver { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, PointerEvent?, JsObject?>? OnPointerUp { get; set; }
    /// <summary>
    /// Occurs to indicate progress while downloading media data.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, ProgressEvent?, JsObject?>? OnProgress { get; set; }
    /// <summary>
    /// Occurs when the playback rate is increased or decreased.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, Event?, JsObject?>? OnRateChange { get; set; }
    /// <summary>
    /// Fires when the user resets a form.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, Event?, JsObject?>? OnReset { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, UIEvent?, JsObject?>? OnResize { get; set; }
    /// <summary>
    /// Fires when the user repositions the scroll box in the scroll bar on the object.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, Event?, JsObject?>? OnScroll { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, SecurityPolicyViolationEvent?, JsObject?>? OnSecurityPolicyViolation { get; set; }
    /// <summary>
    /// Occurs when the seek operation ends.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, Event?, JsObject?>? OnSeeked { get; set; }
    /// <summary>
    /// Occurs when the current playback position is moved.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, Event?, JsObject?>? OnSeeking { get; set; }
    /// <summary>
    /// Fires when the current selection changes.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, Event?, JsObject?>? OnSelect { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, Event?, JsObject?>? OnSelectionChange { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, Event?, JsObject?>? OnSelectStart { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, Event?, JsObject?>? OnSlotChange { get; set; }
    /// <summary>
    /// Occurs when the download has stopped.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, Event?, JsObject?>? OnStalled { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, SubmitEvent?, JsObject?>? OnSubmit { get; set; }
    /// <summary>
    /// Occurs if the load operation has been intentionally halted.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, Event?, JsObject?>? OnSuspend { get; set; }
    /// <summary>
    /// Occurs to indicate the current playback position.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, Event?, JsObject?>? OnTimeUpdate { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, Event?, JsObject?>? OnToggle { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, TouchEvent?, JsObject?>? OnTouchCancel { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, TouchEvent?, JsObject?>? OnTouchEnd { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, TouchEvent?, JsObject?>? OnTouchMove { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, TouchEvent?, JsObject?>? OnTouchStart { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, TransitionEvent?, JsObject?>? OnTransitionCancel { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, TransitionEvent?, JsObject?>? OnTransitionEnd { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, TransitionEvent?, JsObject?>? OnTransitionRun { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, TransitionEvent?, JsObject?>? OnTransitionStart { get; set; }
    /// <summary>
    /// Occurs when the volume is changed, or playback is muted or unmuted.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, Event?, JsObject?>? OnVolumeChange { get; set; }
    /// <summary>
    /// Occurs when playback stops because the next frame of a video resource is not available.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, Event?, JsObject?>? OnWaiting { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    [global::System.Obsolete("This is a legacy alias of `onanimationend`.")]
    public JsFunc<GlobalEventHandlers?, Event?, JsObject?>? OnWebkitAnimationEnd { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    [global::System.Obsolete("This is a legacy alias of `onanimationiteration`.")]
    public JsFunc<GlobalEventHandlers?, Event?, JsObject?>? OnWebkitAnimationIteration { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    [global::System.Obsolete("This is a legacy alias of `onanimationstart`.")]
    public JsFunc<GlobalEventHandlers?, Event?, JsObject?>? OnWebkitAnimationStart { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    [global::System.Obsolete("This is a legacy alias of `ontransitionend`.")]
    public JsFunc<GlobalEventHandlers?, Event?, JsObject?>? OnWebkitTransitionEnd { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public JsFunc<GlobalEventHandlers?, WheelEvent?, JsObject?>? OnWheel { get; set; }
    /// <summary>
    /// To be added.
    /// </summary>
    public void AddEventListener(string? type, Union<EventListener, EventListenerObject>? listener, Union<bool, AddEventListenerOptions>? options);
    /// <summary>
    /// To be added.
    /// </summary>
    public void RemoveEventListener(string? type, Union<EventListener, EventListenerObject>? listener, Union<bool, EventListenerOptions>? options);
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<UIEvent?> WhenAborted;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<AnimationEvent?> AnimationCancel;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<AnimationEvent?> AnimationEnd;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<AnimationEvent?> AnimationIteration;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<AnimationEvent?> AnimationStart;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<MouseEvent?> AuxClick;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<InputEvent?> BeforeInput;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<FocusEvent?> Blurred;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<Event?> CanPlay;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<Event?> CanPlayThrough;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<Event?> Change;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<MouseEvent?> Clicked;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<Event?> WhenClosed;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<CompositionEvent?> CompositionEnd;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<CompositionEvent?> CompositionStart;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<CompositionEvent?> CompositionUpdate;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<MouseEvent?> ContextMenu;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<Event?> CueChange;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<MouseEvent?> DblClick;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<DragEvent?> Drag;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<DragEvent?> DragEnd;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<DragEvent?> DragEnter;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<DragEvent?> DragLeave;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<DragEvent?> DragOver;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<DragEvent?> DragStart;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<DragEvent?> Drop;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<Event?> DurationChange;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<Event?> Emptied;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<Event?> WhenEnded;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<ErrorEvent?> Errored;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<FocusEvent?> Focused;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<FocusEvent?> FocusIn;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<FocusEvent?> FocusOut;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<FormDataEvent?> FormData;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<PointerEvent?> GotPointerCapture;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<Event?> Input;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<Event?> Invalid;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<KeyboardEvent?> KeyDown;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<KeyboardEvent?> KeyPress;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<KeyboardEvent?> KeyUp;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<Event?> Loaded;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<Event?> LoadedData;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<Event?> LoadedMetadata;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<Event?> LoadStart;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<PointerEvent?> LostPointerCapture;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<MouseEvent?> MouseDown;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<MouseEvent?> MouseEnter;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<MouseEvent?> MouseLeave;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<MouseEvent?> MouseMove;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<MouseEvent?> MouseOut;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<MouseEvent?> MouseOver;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<MouseEvent?> MouseUp;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<Event?> WhenPaused;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<Event?> WhenPlayed;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<Event?> Playing;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<PointerEvent?> PointerCancel;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<PointerEvent?> PointerDown;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<PointerEvent?> PointerEnter;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<PointerEvent?> PointerLeave;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<PointerEvent?> PointerMove;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<PointerEvent?> PointerOut;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<PointerEvent?> PointerOver;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<PointerEvent?> PointerUp;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<ProgressEvent?> Progress;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<Event?> RateChange;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<Event?> WhenReset;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<UIEvent?> Resize;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<Event?> Scrolled;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<SecurityPolicyViolationEvent?> SecurityPolicyViolation;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<Event?> Seeked;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<Event?> WhenSeeking;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<Event?> WhenSelected;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<Event?> SelectionChange;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<Event?> SelectStart;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<Event?> SlotChange;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<Event?> Stalled;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<SubmitEvent?> Submitted;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<Event?> Suspend;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<Event?> TimeUpdate;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<Event?> Toggle;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<TouchEvent?> TouchCancel;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<TouchEvent?> TouchEnd;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<TouchEvent?> TouchMove;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<TouchEvent?> TouchStart;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<TransitionEvent?> TransitionCancel;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<TransitionEvent?> TransitionEnd;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<TransitionEvent?> TransitionRun;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<TransitionEvent?> TransitionStart;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<Event?> VolumeChange;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<Event?> Waiting;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<Event?> WebkitAnimationEnd;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<Event?> WebkitAnimationIteration;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<Event?> WebkitAnimationStart;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<Event?> WebkitTransitionEnd;
    /// <summary>
    /// To be added.
    /// </summary>
    public event EventHandler<WheelEvent?> Wheel;
}
#pragma warning restore CS0108, CS8764, CS8766

