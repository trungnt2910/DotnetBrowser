// This file was generated by "LibDomTypeScriptParser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", from "lib.dom.d.ts".
// Do not edit directly. If you encounter any bugs, please fix the generator's code.
//
// Copyright (C) 2022 Trung Nguyen. All rights reserved.
// Licensed under the MIT License.

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */

#nullable enable
using System;
using System.Diagnostics.CodeAnalysis;
using Trungnt2910.Browser.Generators;

namespace Trungnt2910.Browser.Dom;

#pragma warning disable CS0108, CS8764, CS8766
/// <summary>
/// In the following code snippet, we make a request to open a database, and include handlers for the success and error cases. For a full working example, see our To-do Notifications app (view example live.)
/// </summary>
[JsObject]
public partial class IDBFactory: JsObject
{
    
    /// <summary>
    /// Compares two values as keys. Returns -1 if key1 precedes key2, 1 if key2 precedes key1, and 0 if the keys are equal.
    /// Throws a "DataError" DOMException if either input is not a valid key.
    /// </summary>
    public double? Cmp(JsObject? first, JsObject? second) => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.cmp({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(first))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(second))})");
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public Promise<JsArray<IDBDatabaseInfo>>? Databases() => global::Trungnt2910.Browser.WebAssemblyRuntime<Promise<JsArray<IDBDatabaseInfo>>>.ValueOrNullFromJs($"{_jsThis}.databases()");
    
    
    /// <summary>
    /// Attempts to delete the named database. If the database already exists and there are open connections that don't close in response to a versionchange event, the request will be blocked until all they close. If the request is successful request's result will be null.
    /// </summary>
    public IDBOpenDBRequest? DeleteDatabase(string? name) => global::Trungnt2910.Browser.WebAssemblyRuntime<IDBOpenDBRequest>.ValueOrNullFromJs($"{_jsThis}.deleteDatabase({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(name))})");
    
    
    /// <summary>
    /// Attempts to open a connection to the named database with the current version, or 1 if it does not already exist. If the request is successful request's result will be the connection.
    /// </summary>
    public IDBOpenDBRequest? Open(string? name, double? version) => global::Trungnt2910.Browser.WebAssemblyRuntime<IDBOpenDBRequest>.ValueOrNullFromJs($"{_jsThis}.open({(global::Trungnt2910.Browser.JsObject.ToJsObjectString(name))}, {(global::Trungnt2910.Browser.JsObject.ToJsObjectString(version))})");
    
}
#pragma warning restore CS0108, CS8764, CS8766

