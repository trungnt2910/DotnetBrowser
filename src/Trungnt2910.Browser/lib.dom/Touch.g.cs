// This file was generated by "LibDomTypeScriptParser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", from "lib.dom.d.ts".
// Do not edit directly. If you encounter any bugs, please fix the generator's code.
//
// Copyright (C) 2022 Trung Nguyen. All rights reserved.
// Licensed under the MIT License.

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */

#nullable enable
using System;
using System.Diagnostics.CodeAnalysis;
using Trungnt2910.Browser.Generators;

namespace Trungnt2910.Browser.Dom;

#pragma warning disable CS0108, CS8764, CS8766
/// <summary>
/// A single contact point on a touch-sensitive device. The contact point is commonly a finger or stylus and the device may be a touchscreen or trackpad.
/// </summary>
[JsObject]
public partial class Touch: JsObject
{
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? ClientX
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.clientX");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? ClientY
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.clientY");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? Force
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.force");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? Identifier
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.identifier");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? PageX
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.pageX");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? PageY
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.pageY");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? RadiusX
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.radiusX");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? RadiusY
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.radiusY");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? RotationAngle
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.rotationAngle");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? ScreenX
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.screenX");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public double? ScreenY
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime.doubleOrNullFromJs($"{_jsThis}.screenY");
    }
    
    
    /// <summary>
    /// To be added.
    /// </summary>
    public EventTarget? Target
    {
        get => global::Trungnt2910.Browser.WebAssemblyRuntime<EventTarget>.ValueOrNullFromJs($"{_jsThis}.target");
    }
    
}
#pragma warning restore CS0108, CS8764, CS8766

